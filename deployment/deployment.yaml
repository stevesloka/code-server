apiVersion: v1
kind: Namespace
metadata:
  name: code-server
---
apiVersion: v1
kind: Service
metadata:
 name: code-server
 namespace: code-server
spec:
 ports:
 - port: 80
   name: https
   protocol: TCP
 selector:
   app: code-server
 type: ClusterIP
---
kind: StorageClass
apiVersion: storage.k8s.io/v1
metadata:
  name: gp2
  annotations:
    storageclass.kubernetes.io/is-default-class: "true"
provisioner: kubernetes.io/aws-ebs
parameters:
  type: gp2
  fsType: ext4 
---
kind: PersistentVolumeClaim
apiVersion: v1
metadata:
  name: steves-code
  namespace: code-server
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: 60Gi
---
apiVersion: extensions/v1beta1
kind: Deployment
metadata:
  labels:
    app: code-server
  name: code-server
  namespace: code-server
spec:
  selector:
    matchLabels:
      app: code-server
  replicas: 1
  template:
    metadata:
      labels:
        app: code-server
    spec:
      containers:
      - image: stevesloka/code-server
        imagePullPolicy: Always
        name: code-server
        command: ["/code-server"]
        args:
        - /go/src
        - --allow-http
        - -p=80
        - --cert=/certs/tls.crt
        - --cert-key=/certs/tls.key
        ports:
        - containerPort: 80
          name: http
        volumeMounts:
        - name: code-server-storage
          mountPath: /go/src
        - name: code-server-certs
          mountPath: "/certs"
      volumes:
      - name: code-server-storage
        persistentVolumeClaim:
          claimName: steves-code
      - name: code-server-certs
        secret:
          secretName: code-server
